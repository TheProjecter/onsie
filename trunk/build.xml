<!--
 * Copyright 2009 Jonathan Grochowski
 * 
 * This file is part of onsie.
 * 
 * onsie is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * onsie is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with onsie.  If not, see <http://www.gnu.org/licenses/>.
-->

<project name="onsie"  basedir="." default="main">

  <!-- SVN revision finder -->
  <exec outputproperty="build.current.revision" executable="svnversion">
    <arg line="-n -c" />
    <redirector>
      <outputfilterchain>
        <tokenfilter>
          <replaceregex pattern="^(?:[0-9]*:)?([0-9]*)[MPS]{0,4}" 
			replace="\1" flags="g"/>
        </tokenfilter>
      </outputfilterchain>
    </redirector>
  </exec>

  <!-- General configuration -->
  <property name="src.dir" value="src" />
  <property name="resource.dir" value="resources" />
  <property name="build.dir" value="build" />
  <property name="classes.dir" value="${build.dir}/classes" />
  <property name="jar.dir" value="${build.dir}/jar" />

  <!-- Server -->
  <property name="server.resource.dir" value="${resource.dir}/server" />
  <property name="server.build.dir" value="${build.dir}/server" />
  <property name="server.classes.dir" value="${server.build.dir}/classes" />
  <property name="server.jar.dir" value="${server.build.dir}/jar" />
  <property name="server.main-class" value="com.jgrocho.uno.ServerTest" />
  <property name="server.main-class.path" value="com/jgrocho/uno/ServerTest.java" />

  <target name="server-clean">
    <delete dir="${server.build.dir}" />
  </target>

  <target name="server-compile">
    <mkdir dir="${server.classes.dir}" />
    <javac srcdir="${src.dir}" destdir="${server.classes.dir}">
      <include name="${server.main-class.path}" />
    </javac>
  </target>

  <target name="server-jar" depends="server-compile">
    <mkdir dir="${server.jar.dir}" />
    <jar destfile="${server.jar.dir}/Server-r${build.current.revision}.jar" 
	 basedir="${server.classes.dir}">
      <manifest>
	<attribute name="Main-Class" value="${server.main-class}" />
      </manifest>
      <fileset dir="${server.resource.dir}" />
    </jar>
  </target>

  <target name="server-main" depends="server-clean,server-jar" />



  <!-- Client -->
  <property name="client.resource.dir" value="${resource.dir}/client" />
  <property name="client.build.dir" value="${build.dir}/client" />
  <property name="client.classes.dir" value="${client.build.dir}/classes" />
  <property name="client.jar.dir" value="${client.build.dir}/jar" />
  <property name="client.jar.name" value="${client.jar.dir}/Client-r${build.current.revision}.jar" />
  <property name="client.main-class" value="com.jgrocho.uno.ClientGUI" />
  <property name="client.main-class.path" value="com/jgrocho/uno/ClientGUI.java" />

  <target name="client-clean">
    <delete dir="${client.build.dir}" />
  </target>

  <target name="client-compile">
    <mkdir dir="${client.classes.dir}" />
    <javac srcdir="${src.dir}" destdir="${client.classes.dir}">
      <include name="${client.main-class.path}" />
    </javac>
  </target>

  <target name="client-jar" depends="client-compile">
    <mkdir dir="${client.jar.dir}" />
    <jar destfile="${client.jar.name}" 
	 basedir="${client.classes.dir}">
      <manifest>
	<attribute name="Main-Class" value="${client.main-class}" />
      </manifest>
      <fileset dir="${client.resource.dir}" />
    </jar>
  </target>

  <target name="client-run" depends="client-jar">
    <java jar="${client.jar.name}" fork="true" />
  </target>

  <target name="client-clean-build" depends="client-clean,client-jar" />

  <target name="client-main" depends="client-clean,client-run" />

  <!-- General -->
  <target name="clean" depends="server-clean,client-clean">
    <delete dir="${build.dir}" />
  </target>

  <target name="compile" depends="server-compile,client-compile" />

  <target name="jar" depends="server-jar,client-jar" />

  <target name="run" depends="client-run" />
  
  <target name="main" depends="clean,jar" />

</project>
